#!/usr/bin/env node

/**
 * Module dependencies.
 */

const app = require('../app');
const debug = require('debug')('aurinsk-website:server');
const http = require('http');
const https = require('https');
const fs = require('fs');

/**
 * Listen on provided port, on all network interfaces.
 */

if (process.env.NODE_ENV === 'PRODUCTION') {
  const httpsServer = https.createServer({
    key: fs.readFileSync('/etc/letsencrypt/live/api.aurinsk.com/privkey.pem'),
    cert: fs.readFileSync('/etc/letsencrypt/live/api.aurinsk.com/cert.pem'),
    ca: fs.readFileSync('/etc/letsencrypt/live/api.aurinsk.com/chain.pem')
  }, app);

  httpsServer.listen('3050');
  httpsServer.on('error', onError);
}

const httpServer = http.createServer(app);
httpServer.listen('3000');
httpServer.on('error', onError);

/**
 * Event listener for HTTP server "error" event.
 */

function onError(error) {
  if (error.syscall !== 'listen') {
    throw error;
  }

  const bind = typeof port === 'string'
      ? 'Pipe ' + port
      : 'Port ' + port;

  // handle specific listen errors with friendly messages
  switch (error.code) {
    case 'EACCES':
      console.error(bind + ' requires elevated privileges');
      process.exit(1);
      break;
    case 'EADDRINUSE':
      console.error(bind + ' is already in use');
      process.exit(1);
      break;
    default:
      throw error;
  }
}